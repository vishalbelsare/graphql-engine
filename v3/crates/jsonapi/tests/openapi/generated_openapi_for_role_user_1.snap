---
source: crates/jsonapi/tests/jsonapi_golden_tests.rs
expression: generated_openapi
---
{
  "Ok": {
    "openapi": "3.1.0",
    "info": {
      "title": "Hasura JSONAPI (alpha)",
      "description": "REST API generated to match the JSON:API spec: https://jsonapi.org",
      "version": "0.1"
    },
    "paths": {
      "/v1/rest/default/Actors": {
        "get": {
          "summary": "Fetch actor values",
          "parameters": [
            {
              "name": "page[limit]",
              "in": "query",
              "description": "Optional limit for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "5"
            },
            {
              "name": "page[offset]",
              "in": "query",
              "description": "Optional offset for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "10"
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Optional list of fields from Actors to use in sorting response. 'field' will sort in ascending order, whilst '-field' will sort descending.",
              "schema": {
                "items": {
                  "enum": [
                    "actor_id",
                    "-actor_id",
                    "name",
                    "-name",
                    "movie_id",
                    "-movie_id"
                  ]
                }
              },
              "example": "actor_id,-name"
            },
            {
              "name": "include",
              "in": "query",
              "description": "Optional list of relationships from Actors to include in the response. Use dot-separated names to include nested relationships.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": "MovieFromCommand"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "Filter expression for Actors",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/default_actor_boolexp"
                  }
                }
              }
            },
            {
              "name": "fields[actor]",
              "in": "query",
              "description": "Optional list of fields from actor type to include in response. If no fields are provided, all fields are returned",
              "schema": {
                "items": {
                  "enum": [
                    "actor_id",
                    "name",
                    "movie_id"
                  ]
                }
              },
              "example": "actor_id,name,movie_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Actors response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "_type",
                            "attributes"
                          ],
                          "properties": {
                            "_type": {
                              "enum": [
                                "default_actor"
                              ]
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "actor_id": {
                                  "type": "integer"
                                },
                                "movie_id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "id": {
                              "type": "string"
                            },
                            "relationships": {
                              "type": "object",
                              "properties": {
                                "MovieFromCommand": {
                                  "type": "object",
                                  "required": [
                                    "data"
                                  ],
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "_type"
                                      ],
                                      "properties": {
                                        "_type": {
                                          "enum": [
                                            "default_commandMovie"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "included": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "_type",
                                "attributes"
                              ],
                              "properties": {
                                "_type": {
                                  "enum": [
                                    "default_commandMovie"
                                  ]
                                },
                                "attributes": {
                                  "type": "object",
                                  "properties": {
                                    "movie_id": {
                                      "type": "integer"
                                    },
                                    "title": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/v1/rest/default/Album": {
        "get": {
          "summary": "Fetch Album values",
          "parameters": [
            {
              "name": "page[limit]",
              "in": "query",
              "description": "Optional limit for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "5"
            },
            {
              "name": "page[offset]",
              "in": "query",
              "description": "Optional offset for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "10"
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Optional list of fields from Album to use in sorting response. 'field' will sort in ascending order, whilst '-field' will sort descending.",
              "schema": {
                "items": {
                  "enum": [
                    "AlbumId",
                    "-AlbumId",
                    "Title",
                    "-Title"
                  ]
                }
              },
              "example": "AlbumId,-Title"
            },
            {
              "name": "include",
              "in": "query",
              "description": "Optional list of relationships from Album to include in the response. Use dot-separated names to include nested relationships.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": "Artist,Tracks"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "Filter expression for Album",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/default_album_bool_exp"
                  }
                }
              }
            },
            {
              "name": "fields[Album]",
              "in": "query",
              "description": "Optional list of fields from Album type to include in response. If no fields are provided, all fields are returned",
              "schema": {
                "items": {
                  "enum": [
                    "AlbumId",
                    "Title"
                  ]
                }
              },
              "example": "AlbumId,Title"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Album response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "_type",
                            "attributes"
                          ],
                          "properties": {
                            "_type": {
                              "enum": [
                                "default_Album"
                              ]
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "AlbumId": {
                                  "type": "object"
                                },
                                "Title": {
                                  "type": "object"
                                }
                              }
                            },
                            "id": {
                              "type": "string"
                            },
                            "relationships": {
                              "type": "object",
                              "properties": {
                                "Artist": {
                                  "type": "object",
                                  "required": [
                                    "data"
                                  ],
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "_type"
                                      ],
                                      "properties": {
                                        "_type": {
                                          "enum": [
                                            "default_Artist"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "Tracks": {
                                  "type": "object",
                                  "required": [
                                    "data"
                                  ],
                                  "properties": {
                                    "data": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "id",
                                          "_type"
                                        ],
                                        "properties": {
                                          "_type": {
                                            "enum": [
                                              "default_Track"
                                            ]
                                          },
                                          "id": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "included": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "_type",
                                "attributes"
                              ],
                              "properties": {
                                "_type": {
                                  "enum": [
                                    "default_Artist"
                                  ]
                                },
                                "attributes": {
                                  "type": "object",
                                  "properties": {
                                    "Name": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "id": {
                                  "type": "string"
                                },
                                "relationships": {
                                  "type": "object",
                                  "properties": {
                                    "Albums": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "_type"
                                            ],
                                            "properties": {
                                              "_type": {
                                                "enum": [
                                                  "default_Album"
                                                ]
                                              },
                                              "id": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "_type",
                                "attributes"
                              ],
                              "properties": {
                                "_type": {
                                  "enum": [
                                    "default_Track"
                                  ]
                                },
                                "attributes": {
                                  "type": "object",
                                  "properties": {
                                    "AlbumId": {
                                      "type": "object"
                                    },
                                    "Milliseconds": {
                                      "type": "object"
                                    },
                                    "Name": {
                                      "type": "object"
                                    },
                                    "TrackId": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "id": {
                                  "type": "string"
                                },
                                "relationships": {
                                  "type": "object",
                                  "properties": {
                                    "Album": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "object",
                                          "required": [
                                            "id",
                                            "_type"
                                          ],
                                          "properties": {
                                            "_type": {
                                              "enum": [
                                                "default_Album"
                                              ]
                                            },
                                            "id": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/v1/rest/default/Articles": {
        "get": {
          "summary": "Fetch Article values",
          "parameters": [
            {
              "name": "page[limit]",
              "in": "query",
              "description": "Optional limit for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "5"
            },
            {
              "name": "page[offset]",
              "in": "query",
              "description": "Optional offset for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "10"
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Optional list of fields from Articles to use in sorting response. 'field' will sort in ascending order, whilst '-field' will sort descending.",
              "schema": {
                "items": {
                  "enum": [
                    "article_id",
                    "-article_id",
                    "author_id",
                    "-author_id"
                  ]
                }
              },
              "example": "article_id,-author_id"
            },
            {
              "name": "include",
              "in": "query",
              "description": "Optional list of relationships from Articles to include in the response. Use dot-separated names to include nested relationships.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": "Author,AuthorFromCommand"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "Filter expression for Articles",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/default_article_bool_exp"
                  }
                }
              }
            },
            {
              "name": "fields[Article]",
              "in": "query",
              "description": "Optional list of fields from Article type to include in response. If no fields are provided, all fields are returned",
              "schema": {
                "items": {
                  "enum": [
                    "article_id",
                    "author_id"
                  ]
                }
              },
              "example": "article_id,author_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful Articles response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "_type",
                            "attributes"
                          ],
                          "properties": {
                            "_type": {
                              "enum": [
                                "default_Article"
                              ]
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "article_id": {
                                  "type": "integer"
                                },
                                "author_id": {
                                  "type": "object"
                                }
                              }
                            },
                            "id": {
                              "type": "string"
                            },
                            "relationships": {
                              "type": "object",
                              "properties": {
                                "Author": {
                                  "type": "object",
                                  "required": [
                                    "data"
                                  ],
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "_type"
                                      ],
                                      "properties": {
                                        "_type": {
                                          "enum": [
                                            "default_Author"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "AuthorFromCommand": {
                                  "type": "object",
                                  "required": [
                                    "data"
                                  ],
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "_type"
                                      ],
                                      "properties": {
                                        "_type": {
                                          "enum": [
                                            "default_commandAuthor"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "included": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "_type",
                                "attributes"
                              ],
                              "properties": {
                                "_type": {
                                  "enum": [
                                    "default_Author"
                                  ]
                                },
                                "attributes": {
                                  "type": "object",
                                  "properties": {
                                    "author_id": {
                                      "type": "object"
                                    },
                                    "last_name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "id": {
                                  "type": "string"
                                },
                                "relationships": {
                                  "type": "object",
                                  "properties": {
                                    "articles": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "_type"
                                            ],
                                            "properties": {
                                              "_type": {
                                                "enum": [
                                                  "default_Article"
                                                ]
                                              },
                                              "id": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "articles_remote": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "_type"
                                            ],
                                            "properties": {
                                              "_type": {
                                                "enum": [
                                                  "default_Article"
                                                ]
                                              },
                                              "id": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "_type",
                                "attributes"
                              ],
                              "properties": {
                                "_type": {
                                  "enum": [
                                    "default_commandAuthor"
                                  ]
                                },
                                "attributes": {
                                  "type": "object",
                                  "properties": {
                                    "first_name": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "last_name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/v1/rest/default/ArticlesRemote": {
        "get": {
          "summary": "Fetch Article values",
          "parameters": [
            {
              "name": "page[limit]",
              "in": "query",
              "description": "Optional limit for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "5"
            },
            {
              "name": "page[offset]",
              "in": "query",
              "description": "Optional offset for fetched items",
              "schema": {
                "type": "integer"
              },
              "example": "10"
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Optional list of fields from ArticlesRemote to use in sorting response. 'field' will sort in ascending order, whilst '-field' will sort descending.",
              "schema": {
                "items": {
                  "enum": [
                    "article_id",
                    "-article_id",
                    "author_id",
                    "-author_id"
                  ]
                }
              },
              "example": "article_id,-author_id"
            },
            {
              "name": "include",
              "in": "query",
              "description": "Optional list of relationships from ArticlesRemote to include in the response. Use dot-separated names to include nested relationships.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": "Author,AuthorFromCommand"
            },
            {
              "name": "filter",
              "in": "query",
              "description": "Filter expression for ArticlesRemote",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/default_article_bool_exp"
                  }
                }
              }
            },
            {
              "name": "fields[Article]",
              "in": "query",
              "description": "Optional list of fields from Article type to include in response. If no fields are provided, all fields are returned",
              "schema": {
                "items": {
                  "enum": [
                    "article_id",
                    "author_id"
                  ]
                }
              },
              "example": "article_id,author_id"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful ArticlesRemote response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "data"
                    ],
                    "properties": {
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "_type",
                            "attributes"
                          ],
                          "properties": {
                            "_type": {
                              "enum": [
                                "default_Article"
                              ]
                            },
                            "attributes": {
                              "type": "object",
                              "properties": {
                                "article_id": {
                                  "type": "integer"
                                },
                                "author_id": {
                                  "type": "object"
                                }
                              }
                            },
                            "id": {
                              "type": "string"
                            },
                            "relationships": {
                              "type": "object",
                              "properties": {
                                "Author": {
                                  "type": "object",
                                  "required": [
                                    "data"
                                  ],
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "_type"
                                      ],
                                      "properties": {
                                        "_type": {
                                          "enum": [
                                            "default_Author"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "AuthorFromCommand": {
                                  "type": "object",
                                  "required": [
                                    "data"
                                  ],
                                  "properties": {
                                    "data": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "_type"
                                      ],
                                      "properties": {
                                        "_type": {
                                          "enum": [
                                            "default_commandAuthor"
                                          ]
                                        },
                                        "id": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "included": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "anyOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "_type",
                                "attributes"
                              ],
                              "properties": {
                                "_type": {
                                  "enum": [
                                    "default_Author"
                                  ]
                                },
                                "attributes": {
                                  "type": "object",
                                  "properties": {
                                    "author_id": {
                                      "type": "object"
                                    },
                                    "last_name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "id": {
                                  "type": "string"
                                },
                                "relationships": {
                                  "type": "object",
                                  "properties": {
                                    "articles": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "_type"
                                            ],
                                            "properties": {
                                              "_type": {
                                                "enum": [
                                                  "default_Article"
                                                ]
                                              },
                                              "id": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "articles_remote": {
                                      "type": "object",
                                      "required": [
                                        "data"
                                      ],
                                      "properties": {
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "_type"
                                            ],
                                            "properties": {
                                              "_type": {
                                                "enum": [
                                                  "default_Article"
                                                ]
                                              },
                                              "id": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "_type",
                                "attributes"
                              ],
                              "properties": {
                                "_type": {
                                  "enum": [
                                    "default_commandAuthor"
                                  ]
                                },
                                "attributes": {
                                  "type": "object",
                                  "properties": {
                                    "first_name": {
                                      "type": "string"
                                    },
                                    "id": {
                                      "type": "integer"
                                    },
                                    "last_name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "id": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "default_Album": {
          "type": "object",
          "properties": {
            "AlbumId": {
              "type": "object"
            },
            "Title": {
              "type": "object"
            }
          }
        },
        "default_Article": {
          "type": "object",
          "properties": {
            "article_id": {
              "type": "integer"
            },
            "author_id": {
              "type": "object"
            }
          }
        },
        "default_Artist": {
          "type": "object",
          "properties": {
            "Name": {
              "type": "object"
            }
          }
        },
        "default_Author": {
          "type": "object",
          "properties": {
            "author_id": {
              "type": "object"
            },
            "last_name": {
              "type": "string"
            }
          }
        },
        "default_Track": {
          "type": "object",
          "properties": {
            "AlbumId": {
              "type": "object"
            },
            "Milliseconds": {
              "type": "object"
            },
            "Name": {
              "type": "object"
            },
            "TrackId": {
              "type": "object"
            }
          }
        },
        "default_actor": {
          "type": "object",
          "properties": {
            "actor_id": {
              "type": "integer"
            },
            "movie_id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "default_actor_boolexp": {
          "title": "default_actor_boolexp",
          "description": "Filter expression for Actors",
          "type": "object",
          "properties": {
            "$and": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/default_actor_boolexp"
              }
            },
            "$or": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/default_actor_boolexp"
              }
            },
            "actor_id": {
              "title": "actor_id",
              "description": "Filter expression for filtering on actor_id",
              "type": "object",
              "properties": {
                "$_eq": {
                  "type": "integer"
                }
              }
            }
          },
          "oneOf": [
            {
              "required": [
                "actor_id"
              ]
            },
            {
              "required": [
                "$and"
              ]
            },
            {
              "required": [
                "$or"
              ]
            }
          ]
        },
        "default_album_bool_exp": {
          "title": "default_album_bool_exp",
          "description": "Filter expression for Album",
          "type": "object",
          "properties": {
            "$and": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/default_album_bool_exp"
              }
            },
            "$or": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/default_album_bool_exp"
              }
            },
            "AlbumId": {
              "title": "AlbumId",
              "description": "Filter expression for filtering on AlbumId",
              "type": "object",
              "properties": {
                "$eq": {}
              }
            },
            "ArtistId": {
              "title": "ArtistId",
              "description": "Filter expression for filtering on ArtistId",
              "type": "object",
              "properties": {
                "$eq": {}
              }
            },
            "Title": {
              "title": "Title",
              "description": "Filter expression for filtering on Title",
              "type": "object",
              "properties": {
                "$eq": {},
                "$like": {}
              }
            }
          },
          "oneOf": [
            {
              "required": [
                "AlbumId"
              ]
            },
            {
              "required": [
                "ArtistId"
              ]
            },
            {
              "required": [
                "Title"
              ]
            },
            {
              "required": [
                "$and"
              ]
            },
            {
              "required": [
                "$or"
              ]
            }
          ]
        },
        "default_article_bool_exp": {
          "title": "default_article_bool_exp",
          "description": "Filter expression for Articles",
          "type": "object",
          "properties": {
            "$and": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/default_article_bool_exp"
              }
            },
            "$or": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/default_article_bool_exp"
              }
            },
            "article_id": {
              "title": "article_id",
              "description": "Filter expression for filtering on article_id",
              "type": "object"
            },
            "author_id": {
              "title": "author_id",
              "description": "Filter expression for filtering on author_id",
              "type": "object",
              "properties": {
                "$_eq": {}
              }
            },
            "title": {
              "title": "title",
              "description": "Filter expression for filtering on title",
              "type": "object",
              "properties": {
                "$_like": {
                  "type": "string"
                }
              }
            }
          },
          "oneOf": [
            {
              "required": [
                "article_id"
              ]
            },
            {
              "required": [
                "author_id"
              ]
            },
            {
              "required": [
                "title"
              ]
            },
            {
              "required": [
                "$and"
              ]
            },
            {
              "required": [
                "$or"
              ]
            }
          ]
        },
        "default_commandArticle": {
          "type": "object",
          "properties": {
            "article_id": {
              "type": "integer"
            },
            "author_id": {
              "type": "integer"
            },
            "title": {
              "type": "string"
            }
          }
        },
        "default_commandAuthor": {
          "type": "object",
          "properties": {
            "first_name": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "last_name": {
              "type": "string"
            }
          }
        },
        "default_commandMovie": {
          "type": "object",
          "properties": {
            "movie_id": {
              "type": "integer"
            },
            "title": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
