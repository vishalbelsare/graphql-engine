- description: create table 1
  url: /v1/query
  status: 200
  response:
    result_type: CommandOk
    result:
  query:
    type: run_sql
    args:
      source: pg1
      sql: |
        create table author_local(
            author_id serial primary key,
            name text unique
        );
        INSERT INTO author_local (name)
          VALUES ('Author 1'), ('Author 2');

- description: track table
  url: /v1/metadata
  status: 200
  response:
    message: success
  query:
    type: pg_track_table
    args:
      table: author_local
      source: pg1

- description: Simple GraphQL query to fetch items from the source table
  url: /v1/graphql
  status: 200
  response:
    data:
      authorLocal:
        - authorId: 1
          name: "Author 1"
          __typename: AuthorLocal
        - authorId: 2
          name: "Author 2"
          __typename: AuthorLocal
  query:
    query: |
      query {
        authorLocal {
          authorId
          name
          __typename
        }
      }

- description: Simple GraphQL query with field aliases to fetch items from the source table
  url: /v1/graphql
  status: 200
  response:
    data:
      a:
        - b: 1
          c: "Author 1"
          d: AuthorLocal
        - b: 2
          c: "Author 2"
          d: AuthorLocal
  query:
    query: |
      query {
        a: authorLocal {
          b: authorId
          c: name
          d: __typename
        }
      }

- description: Lookup by pk
  url: /v1/graphql
  status: 200
  response:
    data:
      authorLocalByPk:
        authorId: 1
        name: "Author 1"
        __typename: AuthorLocal
  query:
    query: |
      query {
        authorLocalByPk(authorId: 1) {
          authorId
          name
          __typename
        }
      }

- description: Aggregate
  url: /v1/graphql
  status: 200
  response:
    data:
      authorLocalAggregate:
        __typename: AuthorLocalAggregate
        aggregate:
          __typename: AuthorLocalAggregateFields
          count: 1
  query:
    query: |
      query MyQuery {
        authorLocalAggregate(where: {name: {_eq: "Author 2"}}) {
          __typename
          aggregate {
            __typename
            count
          }
        }
      }

- description: Insert
  url: /v1/graphql
  status: 200
  response:
    data:
      insertAuthorLocal:
        __typename: AuthorLocalMutationResponse
        returning:
          - __typename: AuthorLocal
            authorId: 3
            name: Author 3
  query:
    query: |
      mutation MyMutation {
        insertAuthorLocal(objects: {name: "Author 3", authorId: 3}) {
          __typename
          returning {
            __typename
            authorId
            name
          }
        }
      }

- description: Delete by pk
  url: /v1/graphql
  status: 200
  response:
    data:
      deleteAuthorLocalByPk:
        __typename: AuthorLocal
        authorId: 3
        name: Author 3
  query:
    query: |
      mutation MyMutation {
        deleteAuthorLocalByPk(authorId: 3) {
          __typename
          authorId
          name
        }
      }

- description: untrack table
  url: /v1/metadata
  status: 200
  response:
    message: success
  query:
    type: pg_untrack_table
    args:
      table: author_local
      source: pg1

- description: drop table
  url: /v1/query
  status: 200
  response:
    result_type: CommandOk
    result:
  query:
    type: run_sql
    args:
      source: pg1
      sql: |
        drop table author_local;
